from handlers.base import BaseHandler
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
import logging

logger = logging.getLogger(__name__)


class IlvlHandler(BaseHandler):
    async def handle(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–∏–ª–≤–ª' —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–Ω–æ–ø–æ–∫"""
        if not await self.check_access(update):
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ ilvl (–∫–Ω–æ–ø–∫–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç)
        text = update.message.text
        if not (text.lower() == "–∏–ª–≤–ª" or text == "üìà –£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤"):
            return

        try:
            data = self.file_service.load_lua_file("ilvl")
            if not data or "–®–µ—Ñ" not in data or "–∏–ª–≤–ª" not in data["–®–µ—Ñ"]:
                await update.message.reply_text(
                    "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                    reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
                )
                return

            await update.message.reply_text(
                f"üîπ –£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {data['–®–µ—Ñ']['–∏–ª–≤–ª']}",
                reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
            )
        except Exception as e:
            logger.error(f"Error in IlvlHandler: {e}", exc_info=True)
            await update.message.reply_text(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞",
                reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
            )
