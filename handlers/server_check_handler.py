from handlers.base import BaseHandler
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
import subprocess
import logging

logger = logging.getLogger(__name__)


class ServerCheckHandler(BaseHandler):
    async def handle(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        if not await self.check_access(update):
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–∫–Ω–æ–ø–∫–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç)
        text = update.message.text
        if not (text.lower() == "!–ø—Ä–æ–≤–µ—Ä–∫–∞_—Å–µ—Ä–≤–µ—Ä–∞" or text == "üì° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"):
            return

        try:
            await update.message.reply_text(
                "üîÑ –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞...",
                reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
            )

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
            result_count = subprocess.run(
                'netstat | grep "11294" | wc -l',
                shell=True,
                capture_output=True,
                text=True,
            )
            connection_count = int(result_count.stdout.strip() or 0)

            if connection_count < 1:
                await update.message.reply_text(
                    "üî¥ –°–µ—Ä–≤–µ—Ä –û–§–§–õ–ê–ô–ù",
                    reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
                )
                return

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            result_conn = subprocess.run(
                "netstat | grep ':11294 ' | awk '{print $3}'",
                shell=True,
                capture_output=True,
                text=True,
            )
            connections = [int(x) for x in result_conn.stdout.split() if x.isdigit()]

            result_packets = subprocess.run(
                "netstat | grep ':11294 ' | awk '{print $2}'",
                shell=True,
                capture_output=True,
                text=True,
            )
            packets = [int(x) for x in result_packets.stdout.split() if x.isdigit()]

            problems = []
            if any(c > 500 for c in connections):
                problems.append("—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
            if any(p > 50000 for p in packets):
                problems.append("–ø–∞–∫–µ—Ç—ã")

            if problems:
                response = f"üü° –°–µ—Ä–≤–µ—Ä –ë–û–õ–ï–ï–¢ ({', '.join(problems)})"
            else:
                response = "üü¢ –°–µ—Ä–≤–µ—Ä –û–ù–õ–ê–ô–ù"

            await update.message.reply_text(
                response,
                reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
            )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}", exc_info=True)
            await update.message.reply_text(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞",
                reply_markup=ReplyKeyboardMarkup([["–ù–∞–∑–∞–¥"]], resize_keyboard=True),
            )
